{"ast":null,"code":"var _jsxFileName = \"/Users/altynaykemelova/Desktop/phoneStore(now)/src/components/common/select/Select.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Select.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Select = _ref => {\n  _s();\n  let {\n    selectType,\n    text,\n    data,\n    img,\n    db\n  } = _ref;\n  const [active, setActive] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState(null);\n  const [searchedData, setSearchedData] = useState([]);\n  const handleOptionSelect = option => {\n    setSelectedOptions(option);\n    setActive(false);\n    if (option == db[1].cases.title) {\n      setSearchedData();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-header\",\n      onClick: () => setActive(!active),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectType,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"selected-option\",\n        children: selectedOptions || text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        className: `arrow-icon ${active ? \"open\" : \"\"}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), active && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-options\",\n      children: data.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        onClick: () => handleOptionSelect(el.option || el.model),\n        children: el.option || el.model\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Select, \"HmyZV4/+yQ2xE6tHA9kIqFyoH+Y=\");\n_c = Select;\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Select","_ref","_s","selectType","text","data","img","db","active","setActive","selectedOptions","setSelectedOptions","searchedData","setSearchedData","handleOptionSelect","option","cases","title","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","el","model","id","_c","$RefreshReg$"],"sources":["/Users/altynaykemelova/Desktop/phoneStore(now)/src/components/common/select/Select.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./Select.scss\";\n\nexport const Select = ({ selectType, text, data,  img, db}) => {\n  const [active, setActive] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState(null);\n\n  const [searchedData,setSearchedData ] = useState([])\n\n\n  const handleOptionSelect = (option) => {\n    setSelectedOptions(option);\n    setActive(false);\n    if(option == db[1].cases.title){\n      setSearchedData()\n    }\n  };\n\n  return (\n    <div className=\"select-popup\">\n      <div className=\"select-header\" onClick={() => setActive(!active)}>\n        <img src={selectType} alt=\"\" />\n        <span className=\"selected-option\">{selectedOptions || text}</span>\n        <img\n          src={img}\n          className={`arrow-icon ${active ? \"open\" : \"\"}`}\n          alt=\"\"\n        />\n      </div>\n      {active && (\n        <div className=\"select-options\">\n          {data.map((el) => (\n            <div\n              key={el.id}\n              className=\"option\"\n              onClick={() => handleOptionSelect(el.option || el.model)}\n            >\n              {el.option || el.model}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,OAAO,MAAMC,MAAM,GAAGC,IAAA,IAAyC;EAAAC,EAAA;EAAA,IAAxC;IAAEC,UAAU;IAAEC,IAAI;IAAEC,IAAI;IAAGC,GAAG;IAAEC;EAAE,CAAC,GAAAN,IAAA;EACxD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM,CAACe,YAAY,EAACC,eAAe,CAAE,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAGpD,MAAMiB,kBAAkB,GAAIC,MAAM,IAAK;IACrCJ,kBAAkB,CAACI,MAAM,CAAC;IAC1BN,SAAS,CAAC,KAAK,CAAC;IAChB,IAAGM,MAAM,IAAIR,EAAE,CAAC,CAAC,CAAC,CAACS,KAAK,CAACC,KAAK,EAAC;MAC7BJ,eAAe,EAAE;IACnB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKmB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BpB,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAACE,OAAO,EAAEA,CAAA,KAAMX,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAW,QAAA,gBAC/DpB,OAAA;QAAKsB,GAAG,EAAElB,UAAW;QAACmB,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC/B3B,OAAA;QAAMmB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAET,eAAe,IAAIN;MAAI;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAClE3B,OAAA;QACEsB,GAAG,EAAEf,GAAI;QACTY,SAAS,EAAG,cAAaV,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;QAChDc,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,EACLlB,MAAM,iBACLT,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5Bd,IAAI,CAACsB,GAAG,CAAEC,EAAE,iBACX7B,OAAA;QAEEmB,SAAS,EAAC,QAAQ;QAClBE,OAAO,EAAEA,CAAA,KAAMN,kBAAkB,CAACc,EAAE,CAACb,MAAM,IAAIa,EAAE,CAACC,KAAK,CAAE;QAAAV,QAAA,EAExDS,EAAE,CAACb,MAAM,IAAIa,EAAE,CAACC;MAAK,GAJjBD,EAAE,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACxB,EAAA,CAzCWF,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}